{"version":3,"sources":["components/LoginButton.tsx","App.tsx","reportWebVitals.js","components/ProjectEntry.tsx","components/ProjectList.tsx","components/EditProjectForm.tsx","index.js","components/Resume.tsx","components/ProjectsPage.tsx","components/ProjectDetails.tsx","components/ProjectForm.tsx"],"names":["LoginButton","useAuth0","loginWithRedirect","logout","isAuthenticated","Button","variant","onClick","returnTo","window","location","origin","App","Navbar","bg","sticky","Brand","href","Nav","Link","Item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ProjectEntry","project","to","slug","style","color","title","getDate","date","ProjectList","projects","Jumbotron","ListGroup","sort","a","b","dateOfCompletion","map","as","id","apiUrl","process","ReactDOM","render","StrictMode","domain","clientId","redirectUri","className","exact","path","component","url","width","height","useState","setProjects","user","useEffect","Axios","get","projectData","data","console","log","getProjects","includes","match","setProject","params","response","getProject","design","useForm","register","handleSubmit","getAccessTokenSilently","history","useHistory","onSubmit","audience","accessToken","post","headers","Authorization","push","Form","Group","controlId","Label","Control","name","ref","required","type","placeholder","defaultValue","document","getElementById"],"mappings":"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","file":"static/js/main.f4535eb0.chunk.js","sourcesContent":["import React, { FC } from 'react'\r\nimport { useAuth0 } from \"@auth0/auth0-react\"\r\nimport { Button } from 'react-bootstrap'\r\nimport { UserProfileProp } from '../models/UserProfileProp'\r\n\r\nexport const LoginButton = () => {\r\n    const {loginWithRedirect, logout, isAuthenticated} = useAuth0();\r\n\r\n\r\n    if (!isAuthenticated) {\r\n        return <Button variant=\"secondary\" onClick={() => loginWithRedirect()}>Log In</Button>\r\n    }\r\n    else {\r\n        return <Button variant=\"secondary\" \r\n        onClick={() => logout({ returnTo: window.location.origin})}>Log Out</Button>\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { LoginButton } from './components/LoginButton'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n          <Navbar.Brand href='/'>DJ Bigelow</Navbar.Brand>\r\n          <Nav >\r\n            <Nav.Link href=\"/\">Resume</Nav.Link>\r\n            <Nav.Link href=\"/projects\">Projects</Nav.Link>\r\n            <Nav.Item >\r\n              <LoginButton />\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Navbar>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {FC} from 'react';\r\nimport { ProjectProp } from '../models/ProjectProp';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const ProjectEntry: FC<ProjectProp> = ({project}) => (\r\n    <div>\r\n        <Link to={\"/projects/detail/\" + project.slug} style={{color: \"steelblue\"}}>\r\n            {project.title}\r\n        </Link>\r\n    </div>\r\n)","import React, {FC} from 'react';\r\nimport { ProjectsProp } from '../models/ProjectsProp';\r\nimport { ProjectEntry } from './ProjectEntry';\r\nimport { Project } from '../models/Project'\r\nimport {ListGroup, ListGroupItem, Jumbotron} from  \"react-bootstrap\"\r\n\r\nconst getDate = (date?: Date) => {\r\n    return date != null ? date.getDate() : 0;\r\n};\r\n\r\n\r\nexport const ProjectList: FC<ProjectsProp> = ({projects}) => (\r\n    <div>\r\n        <Jumbotron>\r\n            <h1 style={{color: \"steelblue\"}}>Projects</h1>   \r\n\r\n        </Jumbotron>\r\n        <ListGroup>\r\n            {projects.sort((a: Project, b: Project) => getDate(a.dateOfCompletion) - getDate(b.dateOfCompletion))\r\n                    .map(project => (\r\n                <ListGroup.Item key={project.id} as=\"li\">\r\n                    <ProjectEntry project={project}/>\r\n                </ListGroup.Item>\r\n            ))}\r\n        </ListGroup>\r\n    </div>\r\n)","import React, {FC, useEffect, useState} from 'react'\r\nimport {RouteComponentProps, useHistory} from 'react-router-dom'\r\nimport {useForm} from 'react-hook-form'\r\nimport {Project} from '../models/Project'\r\nimport { ProjectRouteProp } from '../models/ProjectRouteProp'\r\n\r\nimport {Button, Form, Jumbotron} from 'react-bootstrap'\r\nimport {useAuth0} from '@auth0/auth0-react'\r\nimport Axios from 'axios'\r\n\r\nconst apiUrl: string | undefined = process.env.REACT_APP_API_URL\r\n\r\nexport const EditProjectForm: FC<RouteComponentProps<ProjectRouteProp>> = ({match}) => {\r\n    const { register, handleSubmit} = useForm();\r\n    const { getAccessTokenSilently, user } = useAuth0();\r\n    const history = useHistory();\r\n\r\n    const [project, setProject] = useState<Project | null>(null);\r\n\r\n    useEffect(() => {\r\n        const getProject = async () => {\r\n            var response = await Axios.get(apiUrl + '/api/project/GetProject/' + match.params.slug)\r\n            setProject(response.data);\r\n        }\r\n        getProject();\r\n    }, [match.params.slug]);\r\n\r\n    const onSubmit = async (project: Project) => {\r\n        const accessToken = await getAccessTokenSilently( {\r\n            audience: process.env.REACT_APP_AUDIENCE\r\n        });\r\n\r\n        console.log(project.title)\r\n        await Axios.post(\r\n            `${apiUrl}/api/project/updateproject`, \r\n            project,\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`\r\n                }\r\n            })\r\n        history.push('/projects')\r\n    } \r\n\r\n    console.log(user);\r\n\r\n    if (user && user['https://schemas.dev-h2j88rmi.com/roles'].includes(\"Admin\")) {\r\n        return (\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Form.Group controlId=\"id\">\r\n                    <Form.Control name=\"id\" type=\"hidden\" defaultValue={project.id} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control name=\"title\" ref={register({required: true})} type=\"text\" defaultValue={project.title}/>\r\n                </Form.Group>\r\n    \r\n                <Form.Group controlId=\"design\">\r\n                    <Form.Label>Design</Form.Label>\r\n                    <Form.Control name=\"design\" as=\"textarea\" style={{width: 900, height: 1200}} defaultValue={project.design}/>\r\n                </Form.Group>\r\n    \r\n                {/* <Form.Group controlId=\"dateOfCompletion\">\r\n                    <Form.Label>Date Completed</Form.Label>\r\n                    <Form.Control name=\"dateOfCompletion\" type=\"text\" defaultValue={project.dateOfCompletion.toDateString()}/>\r\n                </Form.Group> */}\r\n    \r\n                <Button type=\"submit\">Submit</Button>\r\n            </Form>\r\n        )\r\n    }\r\n    else {\r\n        return <Jumbotron>Admin privileges are required to view this page</Jumbotron>\r\n    }\r\n\r\n    \r\n   \r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Auth0Provider } from '@auth0/auth0-react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { ProjectDetails } from './components/ProjectDetails';\r\nimport { ProjectsPage } from './components/ProjectsPage';\r\nimport { ProjectForm } from './components/ProjectForm';\r\nimport { Resume } from './components/Resume'\r\nimport { EditProjectForm } from './components/EditProjectForm';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <BrowserRouter>\r\n        <Auth0Provider domain={process.env.REACT_APP_DOMAIN}\r\n                       clientId={process.env.REACT_APP_CLIENT_ID}\r\n                       redirectUri={window.location.origin}>\r\n\r\n        <App />\r\n\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Resume} />\r\n                <Route exact path=\"/projects\" component={ProjectsPage} />\r\n                <Route exact path=\"/projects/detail/:slug\" component={ProjectDetails} />\r\n                <Route exact path=\"/newproject\" component={ProjectForm} />\r\n                <Route exact path=\"/projects/edit/:slug\" component={EditProjectForm} />\r\n              </Switch>\r\n            </header>\r\n          </div>\r\n        </Auth0Provider>\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from 'react'\r\n// import {PDF} from './Pdf'\r\n// import ReactPDF, {Page, Text, View, Document, StyleSheet} from '@react-pdf/renderer'\r\nimport IFrame from 'react-iframe'\r\n\r\nexport const Resume = () => (\r\n   <div>\r\n       <IFrame url=\"../../DanielBigelowResume.pdf\" width=\"900px\" height=\"1175px\">\r\n\r\n       </IFrame>\r\n   </div>\r\n)","import React, {useEffect, useState} from 'react';\r\nimport Axios from 'axios';\r\nimport {ProjectList} from './ProjectList'\r\nimport {Project} from '../models/Project'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\nconst apiUrl: string | undefined = process.env.REACT_APP_API_URL\r\n\r\nexport const ProjectsPage = () => {\r\n    const [projects, setProjects] = useState<Project[]> ([]);\r\n    const { user } = useAuth0();\r\n\r\n    useEffect(() => {\r\n        const getProjects = async () => {\r\n            let projectData = (await Axios.get(apiUrl + '/api/project/GetProjects')).data\r\n            console.log(projectData);\r\n            setProjects(projectData);\r\n        }\r\n        getProjects();\r\n    }, []);\r\n    \r\n    // console.log(user['https://schemas.dev-h2j88rmi.com/roles']);\r\n\r\n    if (user && user['https://schemas.dev-h2j88rmi.com/roles'].includes(\"Admin\")) {\r\n        return <div>\r\n        <ProjectList projects={projects} />\r\n\r\n        <div>\r\n            <a href=\"/newproject\">Add Project</a>\r\n        </div>\r\n    </div>\r\n    }\r\n\r\n    return (\r\n        <ProjectList projects={projects} />\r\n    ) \r\n}\r\n\r\n","import Axios from 'axios';\r\nimport React, { FC, useEffect, useState } from 'react';\r\n\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport { Project } from '../models/Project';\r\nimport { ProjectRouteProp } from '../models/ProjectRouteProp';\r\nimport {useAuth0} from '@auth0/auth0-react'\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nimport './styles/ProjectDetails.css'\r\nimport './styles/CodeHighlight.css'\r\n\r\nconst apiUrl: string | undefined = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport const ProjectDetails : FC<RouteComponentProps<ProjectRouteProp>> = ({match}) => {\r\n    const [project, setProject] = useState<Project | null>(null);\r\n    \r\n    const {user} = useAuth0();\r\n\r\n\r\n    useEffect(() => {\r\n        const getProject = async () => {\r\n            console.log(match.params.slug)\r\n            var response = await Axios.get(apiUrl + '/api/project/GetProject/' + match.params.slug)\r\n            setProject(response.data);\r\n        }\r\n        getProject();\r\n    }, [match.params.slug]);\r\n    \r\n    if (user && user['https://schemas.dev-h2j88rmi.com/roles'].includes(\"Admin\")) {\r\n        return (\r\n            <div>\r\n                <div className='projectDetail'>\r\n                    {project && <ReactMarkdown className='markdown'>{project?.design}</ReactMarkdown>}\r\n                </div>\r\n                <Link to={\"/projects/edit/\" + project.slug} style={{color: \"steelblue\"}}>\r\n                    {project.title}\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n    return ( \r\n        <div className='projectDetail'>\r\n            {project && <ReactMarkdown className='markdown'>{project?.design}</ReactMarkdown>}\r\n        </div>\r\n    )\r\n    \r\n\r\n}","import React from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useForm} from 'react-hook-form'\r\nimport {Project} from '../models/Project'\r\nimport {Button, Form, Jumbotron} from 'react-bootstrap'\r\nimport {useAuth0} from '@auth0/auth0-react'\r\nimport Axios from 'axios'\r\n\r\nconst apiUrl: string | undefined = process.env.REACT_APP_API_URL\r\n\r\nexport const ProjectForm = () => {\r\n    const { register, handleSubmit} = useForm();\r\n    const { getAccessTokenSilently, user } = useAuth0();\r\n\r\n    const history = useHistory();\r\n    const onSubmit = async (project: Project) => {\r\n        const accessToken = await getAccessTokenSilently( {\r\n            audience: process.env.REACT_APP_AUDIENCE\r\n        });\r\n\r\n        console.log(project.title)\r\n        await Axios.post(\r\n            `${apiUrl}/api/project/addproject`, \r\n            project,\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`\r\n                }\r\n            })\r\n        history.push('/projects')\r\n    } \r\n\r\n    console.log(user);\r\n\r\n    if (user && user['https://schemas.dev-h2j88rmi.com/roles'].includes(\"Admin\")) {\r\n        return (\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Form.Group controlId=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control name=\"title\" ref={register({required: true})} type=\"text\" placeholder=\"Title\"/>\r\n                </Form.Group>\r\n    \r\n                <Form.Group controlId=\"design\">\r\n                    <Form.Label>Design</Form.Label>\r\n                    <Form.Control name=\"design\" as=\"textarea\" placeholder=\"Design\"/>\r\n                </Form.Group>\r\n    \r\n                <Form.Group controlId=\"dateOfCompletion\">\r\n                    <Form.Label>Date Completed</Form.Label>\r\n                    <Form.Control name=\"dateOfCompletion\" type=\"text\" placeholder=\"mm/dd/yyyy\"/>\r\n                </Form.Group>\r\n    \r\n                <Button type=\"submit\">Submit</Button>\r\n            </Form>\r\n        )\r\n    }\r\n    else {\r\n        return <Jumbotron>Admin privileges are required to view this page</Jumbotron>\r\n    }\r\n\r\n    \r\n   \r\n}"],"sourceRoot":""}